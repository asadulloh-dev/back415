import logging
import requests
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = '6290512650:AAEseEyo-5CEI4cZWspRvrl691n8PsxBJIU'
Openweather_API = "700e5d4c95160a94945137c33f4e1718"
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    await message.reply("")




@dp.message_handler()
async def echo(message: types.Message):
    city_name = message.text
    asia_cities = [
        "Tokyo",
        "Delhi",
        "Shanghai",
        "Mumbai",
        "Beijing",
        "Istanbul",
        "Lahore",
        "Bangkok",
        "Kolkata",
        "Dhaka",
        "Osaka",
        "Manila",
        "Karachi",
        "Chongqing",
        "Bengaluru",
        "Seoul",
        "Jakarta",
        "Kinshasa",
        "Cairo",
        "Mexico City",
        "Mogadishu",
        "Tehran",
        "Baghdad",
        "Riyadh",
        "Singapore",
        "Ankara",
        "Kabul",
        "Hanoi",
        "Kuala Lumpur",
        "Sana'a",
        "Pyongyang",
        "Tashkent",
        "Ashgabat",
        "Kathmandu",
        "Colombo",
        "Dushanbe",
        "Bishkek",
        "Nur-Sultan",
        "Thimphu",
        "Abu Dhabi",
        "Doha",
        "Muscat",
        "Riyadh",
        "Amman",
        "Damascus",
        "Jerusalem",
        "Kuwait City",
        "Beirut",
        "Tbilisi",
        "Yerevan",
        "Baku",
        "Tehran",
        "Islamabad",
        "Kabul",
        "Kathmandu",
        "Thimphu",
        "Dhaka",
        "Naypyidaw",
        "Bangkok",
        "Vientiane",
        "Phnom Penh",
        "Kuala Lumpur",
        "Jakarta",
        "Manila",
        "Singapore",
        "Hanoi",
        "Taipei",
        "Hong Kong",
        "Macau",
        "Ulaanbaatar",
        "Pyongyang",
        "Seoul",
        "Tokyo",
        "Beijing",
        "Shanghai",
        "Taiyuan",
        "Xian",
        "Lanzhou",
        "Yinchuan",
        "Urumqi",
        "Kashgar",
        "Chengdu",
        "Chongqing",
        "Guiyang",
        "Kunming",
        "Nanning",
        "Haikou",
        "Guangzhou",
        "Shenzhen",
        "Hong Kong",
        "Macau",
        "Hargeisa",
        "Mogadishu",
        "Nairobi",
        "Kampala",
        "Dodoma",
        "Lusaka",
        "Harare",
        "Rabat",
        "Algiers",
        "Tunis",
        "Tripoli",
        "Cairo",
        "Gaborone",
        "Antananarivo",
        "Maputo",
        "Windhoek",
        "Pretoria",
        "Cape Town",
        "Luanda",
        "Kinshasa",
        "Brazzaville",
        "Yaoundé",
        "Bangui",
        "N'Djamena",
        "Khartoum",
        "Juba",
        "Kigali",
        "Bujumbura",
        "Addis Ababa",
        "Asmara",
        "Djibouti",
        "Mbabane",
        "Lobamba",
        "Maseru",
        "Nouakchott",
        "Bamako",
        "Niamey",
        "Ouagadougou",
        "Accra",
        "Lomé",
        "Porto-Novo",
        "Abuja",
        "Yaoundé",
        "Douala",
        "Libreville",
        "Malabo",
        "São Tomé",
        "Brazzaville",
        "Kinshasa",
        "Luanda",
        "Kampala",
        "Kigali",
        "Nairobi",
        "Mogadishu",
        "Harare",
        "Lusaka",
        "Pretoria",
        "Cape Town",
        "Windhoek",
        "Gaborone",
        "Antananarivo",
        "Maputo",
        "Bissau",
        "Banjul",
        "Conakry",
        "Freetown",
        "Monrovia",
        "Abidjan",
        "Accra",
        "Lomé",
        "Porto-Novo",
        "Niamey",
        "Ouagadougou"
    ]
    if (city_name in asia_cities):
        data = requests.get(f"https://api.openweathermap.org/data/2.5/weather?q={city_name}&appid={Openweather_API}")
        temperatura = data.json()['main']['temp']
        await message.answer(round(temperatura-273, 2))
    else:
        await message.answer("Xatolik!")



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)